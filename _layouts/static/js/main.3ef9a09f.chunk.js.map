{"version":3,"sources":["components/list/CarListITemDrawer.js","components/list/CarListItem.js","components/list/CarList.js","components/HeaderCarousel.js","App.js","serviceWorker.js","index.js"],"names":["pStyle","fontSize","color","lineHeight","display","marginBottom","drawerStyle","width","DescriptionItem","_ref","title","content","react_default","a","createElement","style","marginRight","CarListItemDrawer","props","itemData","drawer","placement","closable","onClose","setDrawerVisibility","visible","drawerVisibility","Object","objectSpread","alt","src","divider","row","col","span","CarListITemDrawer_DescriptionItem","CarListItem","_useState","useState","_useState2","slicedToArray","list","Item","card","hoverable","cover","actions","icon","type","onClick","Meta","description","CarListITemDrawer","CarList","grid","gutter","xs","sm","md","lg","xl","xxl","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","this","listData","renderItem","item","list_CarListItem","Component","onCarouselChange","b","c","HeaderCarousel","carousel","autoplay","afterChange","dotPosition","App","isListAvailable","length","dataList","className","components_HeaderCarousel","list_CarList","empty","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ef9a09f.chunk.js","sourcesContent":["// Main React Import\r\nimport React from 'react';\r\n// Content components Imports\r\nimport {Col, Divider, Drawer, Row} from \"antd\";\r\n\r\nconst pStyle = {\r\n    fontSize: 16,\r\n    color: 'rgba(0,0,0,0.85)',\r\n    lineHeight: '24px',\r\n    display: 'block',\r\n    marginBottom: 16,\r\n};\r\n\r\nconst drawerStyle = {\r\n    width: '75%',\r\n};\r\n\r\nconst DescriptionItem = ({ title, content }) => (\r\n    <div\r\n        style={{\r\n            fontSize: 14,\r\n            lineHeight: '22px',\r\n            marginBottom: 7,\r\n            color: 'rgba(0,0,0,0.65)',\r\n        }}\r\n    >\r\n        <p\r\n            style={{\r\n                marginRight: 8,\r\n                display: 'inline-block',\r\n                color: 'rgba(0,0,0,0.85)',\r\n            }}\r\n        >\r\n            {title}:\r\n        </p>\r\n        {content}\r\n    </div>\r\n);\r\n\r\nfunction CarListItemDrawer(props) {\r\n\r\n    const itemData = props.itemData;\r\n    return (\r\n        <Drawer\r\n            width={drawerStyle.width}\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={() => props.setDrawerVisibility(false)}\r\n            visible={props.drawerVisibility}\r\n        >\r\n            <p style={{ ...pStyle, marginBottom: 24 }}>{itemData.title}</p>\r\n            <img\r\n\r\n                alt=\"example\"\r\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n            />\r\n            <Divider />\r\n            <p style={pStyle}>Personal</p>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Full Name\" content={itemData.title} />{' '}\r\n                </Col>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Account\" content=\"AntDesign@example.com\" />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"City\" content=\"HangZhou\" />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Country\" content=\"ChinaðŸ‡¨ðŸ‡³\" />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Birthday\" content=\"February 2,1900\" />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Website\" content=\"-\" />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <DescriptionItem\r\n                        title=\"Message\"\r\n                        content=\"Make things:simple as possible but no simpler.\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <p style={pStyle}>Company</p>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Position\" content=\"Programmer\" />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Responsibilities\" content=\"Coding\" />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Department\" content=\"AFX\" />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <DescriptionItem title=\"Supervisor\" content={<a>Lin</a>} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <DescriptionItem\r\n                        title=\"Skills\"\r\n                        content=\"C / C + +, data structures, software engineering, operating systems, computer networks, databases, compiler theory, computer architecture, Microcomputer Principle and Interface Technology, Computer English, Java, ASP, etc.\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <p style={pStyle}>Contacts</p>\r\n\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default CarListItemDrawer;","// Main React Import\r\nimport React, {useState} from 'react';\r\n// Content components Imports\r\nimport {Card, Icon, List} from \"antd\";\r\nimport CarListItemDrawer from \"./CarListITemDrawer\";\r\n\r\n\r\n\r\nfunction CarListItem(props) {\r\n\r\n    const [drawerVisibility, setDrawerVisibility] = useState(false);\r\n\r\n    const itemData = props.itemData;\r\n\r\n    return (\r\n        <List.Item>\r\n            <Card\r\n                hoverable\r\n                cover={\r\n                    <img\r\n                        alt=\"example\"\r\n                        src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                    />\r\n                }\r\n                actions={[<Icon type=\"setting\"/>, <h5 onClick={() => setDrawerVisibility(true)}>More Information</h5>, <Icon type=\"ellipsis\"/>]}\r\n            >\r\n                <Card.Meta\r\n                    title={itemData.title}\r\n                    description={itemData.description}\r\n                />\r\n            </Card>\r\n\r\n            <CarListItemDrawer itemData={itemData} drawerVisibility={drawerVisibility} setDrawerVisibility={setDrawerVisibility}/>\r\n\r\n\r\n        </List.Item>\r\n    );\r\n}\r\n\r\nexport default CarListItem;","// Main React Import\r\nimport React, { Component } from 'react';\r\n// Content components Imports\r\nimport {List} from \"antd\";\r\nimport CarListItem from \"./CarListItem\";\r\n\r\n\r\nclass CarList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <List\r\n                grid={{\r\n                    gutter: 16,\r\n                    xs: 1,\r\n                    sm: 2,\r\n                    md: 2,\r\n                    lg: 4,\r\n                    xl: 4,\r\n                    xxl: 4,\r\n                }}\r\n                itemLayout=\"horizontal\"\r\n                size=\"small\"\r\n                pagination={{\r\n                    onChange: page => {\r\n                        console.log(page);\r\n                    },\r\n                    pageSize: 8,\r\n                }}\r\n                dataSource={this.props.listData}\r\n                // footer={\r\n                //   <div>\r\n                //     <b>ant design</b> footer part\r\n                //   </div>\r\n                // }\r\n                renderItem={item => (\r\n                    <CarListItem itemData={item}/>\r\n                )}\r\n                />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CarList;","// Main React Import\r\nimport React, { useState } from 'react';\r\n// antd Design Component Imports\r\nimport 'antd/dist/antd.css';\r\nimport {Carousel} from \"antd\";\r\n// Content components Imports\r\n\r\n\r\nfunction onCarouselChange(a, b, c) {\r\n    console.log(a, b, c);\r\n}\r\n\r\nfunction HeaderCarousel() {\r\n\r\n\r\n    return (\r\n        <Carousel autoplay afterChange={onCarouselChange} dotPosition={'top'}>\r\n            <div>\r\n                <h3>1</h3>\r\n            </div>\r\n            <div>\r\n                <h3>2</h3>\r\n            </div>\r\n            <div>\r\n                <h3>3</h3>\r\n            </div>\r\n            <div>\r\n                <h3>4</h3>\r\n            </div>\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default HeaderCarousel;\r\n","// Main React Import\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\n// antd Design Component Imports\r\nimport 'antd/dist/antd.css';\r\nimport {Card, Empty} from \"antd\";\r\n// Content components Imports\r\nimport CarList from \"./components/list/CarList\";\r\nimport HeaderCarousel from \"./components/HeaderCarousel\";\r\n\r\n\r\nconst listData = [\r\n  {\r\n    title: 'Title One',\r\n    description: 'This is a description for title 1'\r\n  },\r\n  {\r\n    title: 'Title 2',\r\n    description: 'This is a description for title 2'\r\n  },\r\n  {\r\n    title: 'Title 3',\r\n    description: 'This is a description for title 3'\r\n  },\r\n  {\r\n    title: 'Title 4',\r\n    description: 'This is a description for title 4'\r\n  },\r\n  {\r\n    title: 'Title 5',\r\n    description: 'This is a description for title 5'\r\n  },\r\n  {\r\n    title: 'Title 6',\r\n    description: 'This is a description for title 6'\r\n  },\r\n  {\r\n    title: 'Title 7',\r\n    description: 'This is a description for title 7'\r\n  },\r\n  {\r\n    title: 'Title 8',\r\n    description: 'This is a description for title 8'\r\n  },\r\n  {\r\n    title: 'Title 9',\r\n    description: 'This is a description for title 9'\r\n  },\r\n  {\r\n    title: 'Title 10',\r\n    description: 'This is a description for title 10'\r\n  },\r\n];\r\n\r\n\r\nfunction App() {\r\n\r\n  const isListAvailable = listData.length > 0;\r\n  const [dataList, setDataList] = useState(listData);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Card title=\"Card Title\">\r\n\r\n        <HeaderCarousel/>\r\n\r\n        {isListAvailable ?\r\n\r\n            <CarList listData={dataList}/>\r\n            :\r\n            <Empty/>\r\n        }\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}